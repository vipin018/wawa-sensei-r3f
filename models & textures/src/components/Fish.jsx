/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Fish.gltf -o src/components/Fish.jsx -r public 
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useControls } from 'leva'

export function Fish(props) {
    const group = React.useRef()
    const { scene, animations } = useGLTF('/models/Fish.gltf')
    const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
    const { nodes, materials } = useGraph(clone)
    const { actions } = useAnimations(animations, group)
    console.log(actions)
    const { animation } = useControls({
        animation: {
            value: "Idle",
            options: Object.keys(actions)
        }
    });
    useEffect(() => {
        actions[animation].play()
    }, [animation])
    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <group name="CharacterArmature">
                    <primitive object={nodes.Root} />
                    <skinnedMesh name="Fish" geometry={nodes.Fish.geometry} material={materials.Atlas} skeleton={nodes.Fish.skeleton} />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/Fish.gltf')
